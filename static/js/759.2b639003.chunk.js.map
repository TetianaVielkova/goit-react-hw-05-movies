{"version":3,"file":"static/js/759.2b639003.chunk.js","mappings":"iTACMA,EAAU,mCACVC,EAAM,+BAGCC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IADxC,uBACrBI,EADqB,EACrBA,KADqB,kBAGrBA,EAAKC,SAHgB,2CAAH,qDAMhBC,EAAiB,mCAAG,WAAOC,GAAP,yFACRJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAAyCD,EAAzC,kBAA0DO,EAA1D,+CADQ,uBACtBH,EADsB,EACtBA,KADsB,kBAGtBA,EAAKC,SAHiB,2CAAH,sDAMjBG,EAAkB,mCAAG,WAAOC,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,oBAA6CT,EAA7C,oBADS,uBACvBI,EADuB,EACvBA,KADuB,kBAGvBA,GAHuB,2CAAH,sDAMlBM,EAAkB,mCAAG,WAAOD,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,4BAAqDT,EAArD,oBADS,uBACvBI,EADuB,EACvBA,KADuB,kBAGvBA,EAAKO,MAHkB,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOH,GAAP,yFACRN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,4BAAqDT,EAArD,2BADQ,uBACtBI,EADsB,EACtBA,KADsB,kBAGtBA,EAAKC,SAHiB,2CAAH,qD,mKC1BjBQ,EAAYC,EAAAA,GAAAA,IAAH,gDAGTC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wmBAqBRG,EAAgBH,EAAAA,GAAAA,IAAH,6PAQbI,EAAoBJ,EAAAA,GAAAA,IAAH,uEAKjBK,EAAYL,EAAAA,GAAAA,IAAH,kLAMTM,GAAiBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,4iBAqBdQ,EAAWR,EAAAA,GAAAA,GAAH,qG,SCXrB,EAjDqB,WAAO,IAAD,IACfL,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAAwCe,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,IAJAC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,IAAmBC,GAASqB,KAAKJ,EACpC,GAAE,CAACjB,IAECgB,EAGL,OACI,+BACI,UAACZ,EAAD,YACI,SAACE,EAAD,CAAUgB,GAAE,oBAAEJ,EAASK,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,qBAGCR,IACG,UAACR,EAAD,YACI,SAACE,EAAD,CAAWe,IAAmC,OAA7BT,EAAaU,YAAd,yCAAwEV,EAAaU,aAArF,UAAwGC,GAAcC,IAAKZ,EAAaa,MAAOC,MAAM,SACrK,UAACrB,EAAD,YACI,0BAAKO,EAAae,eAAlB,KAAoCf,EAAagB,aAAaC,MAAM,EAAG,GAAvE,QACA,wCAAgBjB,EAAakB,aAAaC,QAAQ,GAAlD,SACA,sCACA,uBAAInB,EAAaoB,YACjB,oCACA,uBAAIpB,EAAaqB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QACtD,SAAC5B,EAAD,sCACJ,4BACI,SAACF,EAAD,CAAgBW,GAAG,OAAnB,mBACA,SAACX,EAAD,CAAgBW,GAAG,UAAnB,+BAKJ,SAAC,EAAAoB,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,UAS3B,C","sources":["components/servises/Api.js","pages/MovieItem/MovieItem.styled.jsx","pages/MovieItem/MovieItem.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '7eb26739a0134b8d6dba3e701217b4ff';\nconst URL = 'https://api.themoviedb.org/3';\n\n\nexport const getTrendMovieApi = async () => {\n    const {data} = await axios.get(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n    // console.log(data);\n    return data.results;\n};\n\nexport const getSearchMovieApi = async (searchName) => {\n    const {data} = await axios.get(`${URL}/search/movie?api_key=${API_KEY}&query=${searchName}&language=en-US&page=1&include_adult=false`);\n    // console.log(data);\n    return data.results;\n}\n\nexport const getDetailsMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    // console.log(data);\n    return data;\n}\n\nexport const getCreditsMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    // console.log(data.cast);\n    return data.cast;\n}\n\nexport const getReviewMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    // console.log(data);\n    return data.results;\n}","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n    margin: 30px 45px;\n`\nexport const LinkBack = styled(Link)`\n    border: 4px double #e3e3e3;\n    margin: 10px 0;\n    display: inline-block;\n    padding: 5px;\n    background-color: #fff;\n    color: #000;\n    border-radius: 5px;\n    font-family: 'Segoe UI';\n    font-size: 24px;\n    box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n        0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n    -webkit-transition: all 0.5s; \n    :hover,\n    :focus{\n        background-color: #e6e6e6;\n        box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n        0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n    }\n`\n\nexport const ContainerItem = styled.div`\n    display: flex;\n    margin-top: 20px;\n    max-width: 1000px;\n    box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n        0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n    border: 4px double #e3e3e3;\n`\nexport const ContainerInfoItem = styled.div`\n    margin: 20px 40px;\n    max-width: 500px;\n`\n\nexport const ImageItem = styled.img`\n    border-radius: 5px;\n    box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n        0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n`\n\nexport const NavLinkNewPage = styled(NavLink)`\nborder: 4px double #e3e3e3;\nmargin: 0px 20px 0 0 ;\ndisplay: inline-block;\npadding: 5px 15px;\nbackground-color: #fff;\ncolor: #000;\nborder-radius: 5px;\nfont-family: 'Segoe UI';\nfont-size: 24px;\nbox-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n-webkit-transition: all 0.5s; \n:hover,\n:focus{\n    background-color: #e6e6e6;\n    box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n}\n`\n\nexport const SubTitle = styled.h3`\nfont-family: 'Segoe UI';\nfont-size: 26px;\ncolor: #000;\nfont-weight: 600;\n`","import {useState, useEffect} from 'react';\nimport {getDetailsMovieApi} from './../../components/servises/Api';\nimport {  Outlet, useLocation, useParams} from 'react-router-dom';\nimport defaultimg from './../Movies/default-image.jpg';\nimport { Suspense } from 'react';\nimport { Container, ContainerInfoItem, ContainerItem, ImageItem, LinkBack, NavLinkNewPage, SubTitle } from './MovieItem.styled';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [detailsMovie, setDetailsMovie] = useState(null);\n    const location = useLocation();\n    \n\n    useEffect(() => {\n        getDetailsMovieApi(movieId).then(setDetailsMovie);\n    }, [movieId])\n    \n    if (!detailsMovie){\n        return;\n    } \n    return(\n        <>\n            <Container>\n                <LinkBack to={location.state?.from ?? '/'}>\n                    Go back\n                </LinkBack>\n                {detailsMovie && (\n                    <ContainerItem>\n                        <ImageItem src={(detailsMovie.poster_path !== null) ? `https://image.tmdb.org/t/p/w500${detailsMovie.poster_path}` : `${defaultimg}`} alt={detailsMovie.title} width='300' />\n                        <ContainerInfoItem>\n                            <h2>{detailsMovie.original_title} ({detailsMovie.release_date.slice(0, 4)})</h2>\n                            <p>User Score: {detailsMovie.vote_average.toFixed(1)} %</p>\n                            <h3>Overview</h3>\n                            <p>{detailsMovie.overview}</p>\n                            <h3>Genres</h3>\n                            <p>{detailsMovie.genres.map(genre => genre.name).join(' ')}</p>\n                            <SubTitle>Additional information</SubTitle>\n                        <div>\n                            <NavLinkNewPage to='cast'>Cast</NavLinkNewPage>\n                            <NavLinkNewPage to='reviews'>Reviews</NavLinkNewPage>\n                        </div>\n                        </ContainerInfoItem>\n                        \n                    </ContainerItem>)}\n                        <Suspense fallback={null}>\n                            <Outlet/>\n                        </Suspense>\n                </Container>\n                \n\n            \n        </>\n            \n    )\n}\n\nexport default MovieDetails;"],"names":["API_KEY","URL","getTrendMovieApi","axios","data","results","getSearchMovieApi","searchName","getDetailsMovieApi","movieId","getCreditsMovieApi","cast","getReviewMovieApi","Container","styled","LinkBack","Link","ContainerItem","ContainerInfoItem","ImageItem","NavLinkNewPage","NavLink","SubTitle","useParams","useState","detailsMovie","setDetailsMovie","location","useLocation","useEffect","then","to","state","from","src","poster_path","defaultimg","alt","title","width","original_title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}