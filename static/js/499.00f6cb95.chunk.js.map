{"version":3,"file":"static/js/499.00f6cb95.chunk.js","mappings":"iTACMA,EAAU,mCACVC,EAAM,+BAGCC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IADxC,uBACrBI,EADqB,EACrBA,KADqB,kBAGrBA,EAAKC,SAHgB,2CAAH,qDAMhBC,EAAiB,mCAAG,WAAOC,GAAP,yFACRJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAAyCD,EAAzC,kBAA0DO,EAA1D,+CADQ,uBACtBH,EADsB,EACtBA,KADsB,kBAGtBA,EAAKC,SAHiB,2CAAH,sDAMjBG,EAAkB,mCAAG,WAAOC,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,oBAA6CT,EAA7C,oBADS,uBACvBI,EADuB,EACvBA,KADuB,kBAGvBA,GAHuB,2CAAH,sDAMlBM,EAAkB,mCAAG,WAAOD,GAAP,yFACTN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,4BAAqDT,EAArD,oBADS,uBACvBI,EADuB,EACvBA,KADuB,kBAGvBA,EAAKO,MAHkB,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOH,GAAP,yFACRN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BQ,EAA1B,4BAAqDT,EAArD,2BADQ,uBACtBI,EADsB,EACtBA,KADsB,kBAGtBA,EAAKC,SAHiB,2CAAH,qD,kJC3BjBQ,EAAWC,EAAAA,GAAAA,GAAH,kTAaRC,EAAWD,EAAAA,GAAAA,GAAH,oXAaRE,EAAUF,EAAAA,GAAAA,IAAH,+CAIPG,EAAUH,EAAAA,GAAAA,IAAH,+F,SCCpB,EAzBsB,WAClB,IAAQL,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAmCU,EAAAA,EAAAA,UAAS,MAA5C,eAAOC,EAAP,KAAmBC,EAAnB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACNZ,EAAAA,EAAAA,IAAmBD,GAASc,KAAKF,EACpC,GAAE,CAACZ,IAECW,EAGL,OACI,SAACP,EAAD,UACCO,EAAWI,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACZ,UAACb,EAAD,YACI,SAACC,EAAD,CAASa,IAAuB,OAAjBD,EAAD,yCAA4DA,GAA5D,UAAgFE,GAAeC,IAAKL,KAClH,UAACT,EAAD,YACI,wBAAKS,KACL,uBAAIC,SAJGF,EADH,KAUvB,C","sources":["components/servises/Api.js","pages/MovieItem/MovieItemCast/MovieItemCast.styled.jsx","pages/MovieItem/MovieItemCast/MovieItemCast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '7eb26739a0134b8d6dba3e701217b4ff';\nconst URL = 'https://api.themoviedb.org/3';\n\n\nexport const getTrendMovieApi = async () => {\n    const {data} = await axios.get(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n    // console.log(data);\n    return data.results;\n};\n\nexport const getSearchMovieApi = async (searchName) => {\n    const {data} = await axios.get(`${URL}/search/movie?api_key=${API_KEY}&query=${searchName}&language=en-US&page=1&include_adult=false`);\n    // console.log(data);\n    return data.results;\n}\n\nexport const getDetailsMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    // console.log(data);\n    return data;\n}\n\nexport const getCreditsMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    // console.log(data.cast);\n    return data.cast;\n}\n\nexport const getReviewMovieApi = async (movieId) => {\n    const {data} = await axios.get(`${URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    // console.log(data);\n    return data.results;\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 64px);\n    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n    grid-gap: 25px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nexport const CastItem = styled.li`\n    border-radius: 2px;\n    box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n        0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n        border: 4px double #e3e3e3;\n        \n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n\n`\n\nexport const CastImg = styled.img`\n    max-width: 240px;\n`\n\nexport const DivText = styled.div`\n    margin: 15px;\n    font-family: 'Segoe UI';\n    font-size: 14px;\n`","\nimport { getCreditsMovieApi } from \"components/servises/Api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport defaultfoto from './default-foto.jpg';\nimport { CastImg, CastItem, CastList, DivText } from \"./MovieItemCast.styled\";\n\n\nconst MovieItemCast = () => {\n    const { movieId } = useParams();\n    const [castMovies, setCastMovie] = useState(null);\n    \n    useEffect(() => {\n        getCreditsMovieApi(movieId).then(setCastMovie);\n    }, [movieId])\n\n    if (!castMovies){\n        return;\n    } \n    return(\n        <CastList>\n        {castMovies.map(({ cast_id, name, character, profile_path }) => (\n            <CastItem key={cast_id}>\n                <CastImg src={(profile_path !== null) ? `https://image.tmdb.org/t/p/w500${profile_path}` : `${defaultfoto}`} alt={name} />\n                <DivText>\n                    <h2>{name}</h2>\n                    <p>{character}</p>\n                </DivText>\n            </CastItem>))}\n        </CastList>\n    )\n}\n\nexport default MovieItemCast;"],"names":["API_KEY","URL","getTrendMovieApi","axios","data","results","getSearchMovieApi","searchName","getDetailsMovieApi","movieId","getCreditsMovieApi","cast","getReviewMovieApi","CastList","styled","CastItem","CastImg","DivText","useParams","useState","castMovies","setCastMovie","useEffect","then","map","cast_id","name","character","profile_path","src","defaultfoto","alt"],"sourceRoot":""}